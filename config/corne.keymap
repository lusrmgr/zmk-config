/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/reset.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&led_strip { chain-length = <27>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BAS";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W           &kp E        &kp R           &kp T               &kp Y              &kp U            &kp I        &kp O            &kp P     &kp BSPC
&kp LCTRL  &kp A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_GUI F  &mt LEFT_SHIFT G    &mt RIGHT_SHIFT H  &mt RIGHT_GUI J  &mt RCTRL K  &mt RIGHT_ALT L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X           &kp C        &kp V           &kp B               &kp N              &kp M            &kp COMMA    &kp DOT          &kp FSLH  &mt RGUI ESC
                                  &kp LGUI     &mo 1           &lt 1 SPACE         &lt 2 ENTER        &mo 2            &kp RALT
            >;
        };

        lower_layer {
            display-name = "LOW";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1                    &kp N2                        &kp N3        &kp N4            &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans     &bt BT_SEL 0              &bt BT_SEL 1                  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &kp LS(LA(LC(LG(DOWN))))  &kp LS(LA(LC(LG(UP_ARROW))))  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT      &trans    &trans    &trans    &trans     &trans  &trans
                                                                   &kp LGUI      &mo 3             &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            display-name = "RAI";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR        &kp PRCNT    &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans          &trans       &kp MINUS  &kp EQUAL       &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans          &trans       &kp UNDER  &kp PLUS        &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &studio_unlock  &kp SPACE    &kp RET    &studio_unlock  &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans  &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &trans  &mmv MOVE_RIGHT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans  &trans           &trans  &trans  &trans
                        &trans  &trans  &trans    &trans          &trans  &trans
            >;
        };
    };
};
